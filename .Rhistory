setwd("~/Documents/olivialadinig/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
View(activity)
class(activity$date)
summary(actvity)
summary(activity)
str(activity)
library(tidyverse)
activity <- read.csv("activity.csv", stringsAsFactors=FALSE)
str(activity)
activity$date<-ymd(activity$date)
library(tidyverse)
activity$date<-ymd(activity$date)
activity$date<-make_date(activity$date)
library(lubridate)
activity$date<-ymd(activity$date)
str(activity)
library(tidyverse)
library(lubridate)
activity <- read.csv("activity.csv", stringsAsFactors=FALSE)
activity$date<-ymd(activity$date)
library(tidyverse)
library(lubridate)
activity <- read.csv("activity.csv", stringsAsFactors=FALSE)
activity$date<-ymd(activity$date)
activity%>% group_by(day) %>%summarise(sum(steps))
View(activity)
activity%>% group_by(date) %>%summarise(sum(steps))
activity%>% group_by(date) %>%summarise(sum(steps))
tots<-activity%>% group_by(date) %>%summarise(sum(steps))
View(tots)
tots<-activity%>% group_by(date) %>%summarise(sum(steps))%>%
ggplot() +
geom_bar()
ggplot(tots) + geom_bar()
ggplot(data=tots) + geom_bar()
ggplot(data=tots) + geom_bar(mapping=aes(x=steps))
class(tots)
hist(tots)
barplot(tots)
tots<-activity%>% group_by(date) %>%summarise(sum(steps))%>%plot
tots<-activity%>% group_by(date) %>%summarise(sum(steps))
library(tidyverse)
library(lubridate)
activity <- read.csv("activity.csv", stringsAsFactors=FALSE)
activity$date<-ymd(activity$date)
tots<-activity%>% group_by(date) %>%summarise(sum(steps))
class(tots)
hist(tots)
class(tots)
ggplot(data=tots)+geom_bar(mapping=aes(x=steps))
str(tots)
ggplot(data=tots)+geom_bar(mapping=aes(x=sum(steps)))
str(activity)
tots<-activity%>% group_by(date) %>%summarise(steps=sum(steps))
str(tots)
hist(make.numeric(steps))
hist(as.numeric(steps))
hist(as.numeric(tots))
hist(as.numeric(tots$steps))
hist(as.numeric(tots$date))
hist(tots$date)
hist(tots$date, breaks=61)
hist(tots$steps, breaks=61)
hist(date, "days", ...,
xlab = deparse(substitute(x)),
plot = TRUE, freq = FALSE,
start.on.monday = TRUE, format)
hist(date, "days",xlab = deparse(substitute(x)), plot = TRUE, freq = FALSE,start.on.monday = FALSE, format)
hist(tots$date, "days",xlab = deparse(substitute(x)), plot = TRUE, freq = FALSE,start.on.monday = FALSE, format)
hist(tots$steps)
hist(tots$steps, main="Total number of steps per day", xlab="Steps per Day")
summary(tots)
tots<-activity%>% group_by(date) %>%summarise(steps=sum(steps))
hist(tots$steps, main="Total number of steps per day", xlab="Steps per Day")
summary(tots)
pattern<-activity%>% group_by(interval) %>%summarise(steps=mean(steps))
View(pattern)
pattern<-activity%>% group_by(interval) %>%summarise(steps=mean(steps), na.rm=TRUE)
pattern<-activity%>% group_by(interval) %>%summarise(steps=mean(steps, na.rm=TRUE))
plot(pattern$interval, pattern$steps, type='l', main="Average number of steps over all days", xlab="Interval",
ylab="Average number of steps")
plot(pattern$interval, pattern$steps, type='l', main="Average number of steps over all days", xlab="Interval",
ylab="Average number of steps")
str(pattern)
summary(pattern)
max_steps_which <- which.max(pattern$steps)
max_steps_which
(max_steps_which <- which.max(pattern$steps))
(interval_in_which_max[max_steps_which,])
(pattern[max_steps_which,])
sum(is.na(steps$activity))
sum(is.na(activity$steps))
activity_complete<-mutate(activity, day_mean=5)
View(activity_complete)
activity_complete<-activity %>% mutate(day_mean, is.na(steps), median(steps, na.rm=TRUE))
View(activity_complete)
act_compl <- activity
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps[i]<-avg_steps[which(act_compl$steps)[i]==avgSteps$interval),]meanOfSteps
}
}
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps[i]<-avg_steps[which(act_compl$steps)[i]==avgSteps$interval),]$meanOfSteps
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps[i]<-avg_steps[which(act_compl$steps[i]==avgSteps$interval),]$meanOfSteps
}
}
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps[i]<-max_steps_which[which(act_compl$steps[i]==max_steps_which$interval),]$meanOfSteps
}
}
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps[i]<-mean(act_compl$steps)
}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps)
}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-median(act_compl$steps, na.rm=TRUE)
}
}
View(act_compl)
mean(act_compl$steps)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
else {(act_compl$steps_new == act_compl$steps)}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
else {(act_compl$steps_new = act_compl$steps)}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
else {act_compl$steps_new <- act_compl$steps}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
#            else {act_compl$steps_new <- act_compl$steps}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
else {act_compl$steps_new <- act_compl$steps}
}
View(act_compl)
for (i in 1:nrow(act_compl)){
if (is.na(act_compl$steps[i])){
act_compl$steps_new[i]<-mean(act_compl$steps, na.rm=TRUE)
}
#          else {act_compl$steps_new <- act_compl$steps}
}
View(act_compl)
table(act_compl$steps_new)
(sum(is.na(activity$steps)))
length(act_compl)
length(act_compl$steps_new)
act_compl$steps<-act_compl$steps_new
View(act_compl)
act_compl$steps_new <- NULL
View(act_compl)
act_weekday <- act_compl %>% mutate(day_of_week=weekdays(date))
View(act_weekday)
act_weekday$weekday_factor
act_weekday$weekday_factor[day=="Monday"|day=="Tuesday"|day=="Webdesday"|day="Thursday"|day="Friday"] <- "weekday"
act_weekday$weekday_factor[day=="Monday"|day=="Tuesday"|day=="Webdesday"|day=="Thursday"|day=="Friday"] <- "weekday"
act_weekday$weekday_factor[day="Monday"|day="Tuesday"|day="Webdesday"|day="Thursday"|day="Friday"] <- "weekday"
act_weekday$weekday_factor[day="Monday"|day="Tuesday"|day="Wednesday"|day="Thursday"|day="Friday"] <- "weekday"
act_weekday$factor <- act_weekday$day_of_week
View(act_weekday)
act_weekday$factor <- recode(act_weekday$factor, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"= "weekday"))
act_weekday$factor <- recode(act_weekday$factor, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")= "weekday")
View(act_weekday)
act_weekday$factor <- recode(act_weekday$factor, "c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday") = weekday")
act_weekday$factor <- recode(act_weekday$factor, Monday="weekday")
View(act_weekday)
act_weekday$factor <- recode(act_weekday$factor, c(Monday,Tuesday, Wednesday, Thursday, Friday)="weekday")
act_weekday$factor <- recode(act_weekday$factor, Monday="weekday", Tuesday="weekday",
Wednesday="weekday", Thursday="weekday", Friday="weekday",
Saturday="weekend", Sunday="weekend")
table(act_weekday$factor)
class(act_weekday$factor)
as.factor(act_weekday$factor)
class(act_weekday$factor)
act_weekday$factor <- recode(as.factor(act_weekday$factor, Monday="weekday", Tuesday="weekday",
Wednesday="weekday", Thursday="weekday", Friday="weekday",
Saturday="weekend", Sunday="weekend"))
act_weekday$factor <- recode_factor(act_weekday$factor, Monday="weekday", Tuesday="weekday",
Wednesday="weekday", Thursday="weekday", Friday="weekday",
Saturday="weekend", Sunday="weekend")
class(act_weekday$factor)
ggplot(act_weekend,
aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(~ factor)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_line(stat=identity) +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_line(stat="identity") +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_point() +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
geom_line() +
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
#     stat_summary(fun.y="mean", geom="line")+
geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
#     geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
facet_wrap(~ factor, ncol = 1)+
main="Total number of steps by time-interval, for weekends and weekdays"
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
facet_wrap(~ factor, ncol = 1)
summary(act_weekday)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
#      stat_summary(fun.y="mean", geom="line")+
geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="mean", geom="line")+
#      geom_line()+
facet_wrap(~ factor, ncol = 1)
tots<-activity%>% group_by(date) %>%summarise(steps=sum(steps))
hist(tots$steps, main="Total number of steps per day", xlab="Steps per Day")
summary(tots)
plot(pattern$interval, pattern$steps, type='l', main="Average number of steps over all days", xlab="Interval", ylab="Average number of steps")
factor_interval<-act_weekday%>% group_by(interval) %>%
summarise(steps=mean(steps))
ggplot(factor_interval,
aes(x = interval, y = steps)) +
#      stat_summary(fun.y="sum", geom="line")+
geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(factor_interval,
aes(x = interval, y = steps)) +
geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(factor_interval,
aes(x = interval, y = steps)) +
stat_summary(fun.y="sum", geom="line")+
#      geom_line()+
facet_wrap(~ factor, ncol = 1)
factor_interval
act_weekday
factor_interval<-act_weekday%>% group_by(interval) %>%
summarise(steps=mean(steps))
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="sum", geom="line")+
#      geom_line()+
facet_wrap(~ factor, ncol = 1)
factor_interval<-act_weekday%>% group_by(interval) %>%
summarise(steps=mean(steps))
ggplot(factor_interval,
aes(x = interval, y = steps)) +
stat_summary(fun.y="sum", geom="line")+
#      geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(factor_interval,
aes(x = interval, y = steps)) +
stat_summary(fun.y="sum", geom="line")+
#      geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(act_weekday,
aes(x = interval, y = steps)) +
stat_summary(fun.y="sum", geom="line")+
geom_line()+
facet_wrap(~ factor, ncol = 1)
head(act_weekday)
factor_interval<-act_weekday%>% group_by(interval, factor) %>%
summarise(steps=mean(steps, na.rm=TRUE))
ggplot(factor_interval,
aes(x = interval, y = steps)) +
stat_summary(fun.y="sum", geom="line")+
geom_line()+
facet_wrap(~ factor, ncol = 1)
ggplot(factor_interval,
aes(x = interval, y = steps)) +
#    stat_summary(fun.y="sum", geom="line")+
geom_line()+
facet_wrap(~ factor, ncol = 1)
